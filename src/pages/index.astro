---
import type { Dayjs } from "dayjs";
import DetailsList from "../components/DetailsList.astro";
import Layout from "../components/Layout.astro";
import PageTitle from "../components/PageTitle.astro";
import dayjs from "../lib/dayjs";

const allPosts = await Astro.glob<{ title: string; publishDate: string }>("./*.mdx");
allPosts.sort(
	(a, b) =>
		dayjs(b.frontmatter.publishDate).tz().valueOf() -
		dayjs(a.frontmatter.publishDate).tz().valueOf()
);

const description =
	"フロントエンドウェブ開発者。HTMLやWAI-ARIA、CSS設計、レスポンシブデザイン、Jamstack、シングルページアプリケーション、アクセシビリティ、インターフェースデザインが関心領域。業務では、運用を見据えたコーポレートサイトやメディアサイトなどの受託開発に携わる。";

const primaryPosts = [
	{
		title: "宣言的デザイン（翻訳）",
		link: "/2022-08-01-declarative-design",
		meta: "Yuhei Yasuda",
	},
	{
		title: "CSS設計における、すべてがコンポーネントであるという誤謬",
		link: "/2022-06-11-css-components",
		meta: "Yuhei Yasuda",
	},
	{
		title: "本文のタイポグラフィとCSS",
		link: "https://paper.dropbox.com/doc/CSS--BiYi3PrpPiQ_4sOfqgvEMeAEAg-wPD007Sd9dSeEDLP78jri",
		meta: "社内発表",
	},
	{
		title: "『Every Layout』に到った背景と思想についての私の解釈",
		link: "https://note.com/shiftbrain/n/n0a01726673e0",
		meta: "SHIFTBRAIN note",
	},
	{
		title: "「Every Layout」をめぐる座談会",
		link: "https://www.codegrid.net/series/2021-talk-about-every-layout",
		meta: "CodeGrid",
	},
	{
		title:
			"『Every Layout&mdash;モジュラーなレスポンシブデザインを実現するCSS設計論』、素直さという選択 &#35;everylayout-ja",
		link: "/20211011-publication-of-everylayout",
		meta: "Yuhei Yasuda",
	},
	{
		title: "垂直方向のマージンにはmargin-topを優先的に使う理由",
		link: "/20210127-prefer-margin-top",
		meta: "Yuhei Yasuda",
	},
	{
		title: "Tailwind CSSの設計思想を業務に活かす",
		link: "https://www.codegrid.net/series/2020-tailwind-talk",
		meta: "CodeGrid",
	},
	{
		title:
			"CSSのユーティリティクラスと「関心の分離」&mdash;&mdash;いかにしてユーティリティファーストにたどり着いたか（翻訳）",
		link: "https://yuheiy.hatenablog.com/entry/2020/05/25/021342",
		meta: "yuhei blog",
	},
	{
		title: "制作者のためのHTML",
		link: "https://yuheiy.github.io/html-for-creators/",
		meta: "<a href='https://ca11y.connpass.com/event/120003/'>CA11Y #1 〜アクセシビリティはじめて物語〜</a>",
	},
	{
		title: "ページ内リンクの実装から考える、a要素のclickイベントとその振る舞い",
		link: "https://standard.shiftbrain.com/blog/default-action-for-click-event-of-a-element",
		meta: "シフトブレイン／スタンダードデザインユニット",
	},
];

const projects = [
	{
		title: "wordpress-starter",
		link: "https://github.com/yuheiy/wordpress-starter",
		startDate: "2020-08",
		description: "WordPressテーマ構築のための開発環境。",
	},
	{
		title: "accrefs",
		link: "https://accrefs.jp/",
		startDate: "2019-09",
		description:
			"ウェブアクセシビリティの参考資料をまとめたサイト。日本語の資料を中心にリンク数は200を超える。サイトのデザインおよび実装に携わる。有志のメンバーにより制作・運営されている。",
	},
	{
		title: "shifted",
		link: "https://github.com/yuheiy/shifted",
		startDate: "2019-05",
		description: "静的サイト構築のための開発環境。",
	},
	{
		title: "シフトブレイン／スタンダードデザインユニット",
		link: "https://standard.shiftbrain.com/",
		startDate: "2018-10",
		endDate: "2020-06",
		description: "自社で所属していたチームのウェブサイト。",
	},
	{
		title: "yuhei blog",
		link: "https://yuheiy.hatenablog.com/",
		startDate: "2015-10",
		endDate: "2020-11",
		description: "過去に更新していた個人ブログ。",
	},
].map(({ title, link, startDate, endDate, description }) => ({
	title,
	link,
	meta: [getDateHtml(dayjs(startDate)), "&mdash;", endDate && getDateHtml(dayjs(endDate))]
		.filter(Boolean)
		.join(""),
	description,
}));

function getDateHtml(date: Dayjs) {
	return `<time datetime="${date}">${dayjs(date).tz().format("YYYY年M月")}</time>`;
}
---

<Layout description={description}>
	<div class="space-y-16">
		<PageTitle title="安田 祐平">
			<div class="space-y-4 text-dynamic-muted [&_a:any-link]:text-dynamic">
				<p>{description}</p>
				<p
					set:html={`監訳を担当した書籍『<a href="/20211011-publication-of-everylayout">Every Layout—モジュラーなレスポンシブデザインを実現するCSS設計論</a>』が<a href="https://www.hanmoto.com/bd/isbn/9784862465177">オンライン書店などで発売中</a>。`}
				>
				</p>
			</div>
		</PageTitle>

		<div class="border-t"></div>

		<section class="container">
			<h2 class="mb-8 leading-tight font-bold text-dynamic-muted">主な投稿</h2>

			<DetailsList items={primaryPosts} />
		</section>

		<div class="border-t"></div>

		<section class="container">
			<h2 class="mb-8 leading-tight font-bold text-dynamic-muted">プロジェクト</h2>

			<DetailsList items={projects} />
		</section>

		<div class="border-t"></div>

		<section class="container">
			<h2 class="mb-8 leading-tight font-bold text-dynamic-muted">最近のブログ</h2>

			<DetailsList
				items={allPosts.slice(0, 3).map((post) => ({
					title: post.frontmatter.title,
					link: post.url!,
					meta: `<time datetime="${dayjs(post.frontmatter.publishDate).tz().toISOString()}">
							${dayjs(post.frontmatter.publishDate).tz().format("LL")}
						</time>`,
				}))}
				ordered={true}
			/>
		</section>
	</div>
</Layout>
