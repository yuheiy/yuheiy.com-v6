---
import { experimental_AstroContainer as AstroContainer } from 'astro/container';
import { getCollection, getEntry } from 'astro:content';
import DateTime from '../components/DateTime.astro';
import PageHeader from '../components/PageHeader.astro';
import PageNav from '../components/PageNav.astro';
import type { TeaserListItem } from '../components/TeaserList.astro';
import TeaserList from '../components/TeaserList.astro';
import YearMonthRange from '../components/YearMonthRange.astro';
import { siteDescription, siteTitle } from '../consts';
import Layout from '../layouts/Layout.astro';
import { getBlogDescription } from '../lib/blog';
import { blogPath } from '../paths';

const primaryItems: TeaserListItem[] = [
  await getEntry('blog', '2024-12-01-i-am-not-a-visual-thinker')!,
  await getEntry(
    'contributions',
    '2024-11-14-build-original-system-to-distribute-constants-files-instead-of-using-npm-packages',
  )!,
  await getEntry('contributions', '2024-08-05-analyze-internal-ui-library-usage')!,
  await getEntry('blog', '2024-07-22-text-wrap-in-japanese')!,
  await getEntry('contributions', '2023-07-24-gihyojp-tailwindcss')!,
  await getEntry('blog', '2022-11-03-how-to-understand-the-markup')!,
  await getEntry('blog', '2022-08-14-same-width-buttons')!,
  await getEntry('blog', '2022-08-01-declarative-design')!,
  await getEntry('blog', '2022-06-11-css-components')!,
  await getEntry('contributions', '2022-05-27-body-typography')!,
  await getEntry('contributions', '2021-12-27-shiftbrain-everylayout')!,
  await getEntry('blog', '20211011-publication-of-everylayout')!,
  await getEntry('blog', '20210127-prefer-margin-top')!,
  await getEntry('contributions', '2020-05-25-css-utility-classes-and-separation-of-concerns')!,
  await getEntry('contributions', '2019-03-08-html-for-creators')!,
  await getEntry('contributions', '2018-10-26-shiftbrain-in-page-links-and-click-event')!,
].map((entry) => {
  switch (entry.collection) {
    case 'blog':
      return {
        title: entry.data.title,
        link: blogPath(entry),
        meta: siteTitle,
      };

    case 'contributions':
      return {
        title: entry.data.title,
        link: entry.data.link,
        meta: entry.data.channelDetail ?? entry.data.channel,
      };

    default:
      throw new TypeError(entry satisfies never);
  }
});

const container = await AstroContainer.create();

const projectItems: TeaserListItem[] = await Promise.all(
  [
    {
      title: 'sdenv',
      link: 'https://github.com/yuheiy/sdenv',
      yearMonthRange: {
        start: { year: 2023, month: 7 },
      },
      description:
        'ウェブサイト（not ウェブアプリケーション）のためのフロントエンド開発スターターキット。',
    },
    {
      title: 'シフトブレイン／スタンダードデザインユニット',
      link: 'https://standard.shiftbrain.com/',
      yearMonthRange: {
        start: { year: 2018, month: 10 },
        end: { year: 2020, month: 6 },
      },
      description: '自社で所属していたチームのウェブサイト。',
    },
    {
      title: 'yuhei blog',
      link: 'https://yuheiy.hatenablog.com/',
      yearMonthRange: {
        start: { year: 2015, month: 10 },
        end: { year: 2020, month: 11 },
      },
      description: '過去に更新していた個人ブログ。',
    },
  ].map(async ({ yearMonthRange, ...item }) => ({
    ...item,
    meta: await container.renderToString(YearMonthRange, {
      props: yearMonthRange,
    }),
  })),
);

const latestBlogItems: TeaserListItem[] = await Promise.all(
  (await getCollection('blog'))
    .toSorted((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
    .slice(0, 3)
    .map(async (entry) => ({
      title: entry.data.title,
      link: blogPath(entry),
      meta: await container.renderToString(DateTime, {
        props: {
          date: entry.data.pubDate,
        },
      }),
      description: await getBlogDescription(entry),
    })),
);
---

<Layout isHome description={siteDescription}>
  <PageNav isHome />

  <main>
    <PageHeader isHome title="安田 祐平">
      <p>{siteDescription}</p>
      <p>
        監訳を担当した書籍『<a href={blogPath(everylayoutEntry!)}
          >Every Layout&mdash;&mdash;モジュラーなレスポンシブデザインを実現するCSS設計論</a
        >』が<a href="https://www.amazon.co.jp/dp/486246517X">Amazonなどで発売中</a>。
      </p>
    </PageHeader>

    <section>
      <h2 class="mt-24 mb-10 text-lg/japanese-tight font-bold text-dynamic-muted kerning-all">
        おもな投稿
      </h2>

      <TeaserList headingLevel={3} items={primaryItems} />
    </section>

    <section>
      <h2 class="mt-24 mb-10 text-lg/japanese-tight font-bold text-dynamic-muted kerning-all">
        プロジェクト
      </h2>

      <TeaserList headingLevel={3} items={projectItems} />
    </section>

    <section>
      <h2 class="mt-24 mb-10 text-lg/japanese-tight font-bold text-dynamic-muted kerning-all">
        最近のブログ
      </h2>

      <TeaserList headingLevel={3} items={latestBlogItems} />
    </section>
  </main>
</Layout>
