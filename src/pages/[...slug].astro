---
import { getCollection } from 'astro:content';
import PageHeader from '../components/PageHeader.astro';
import Layout from '../layouts/Layout.astro';
import { renderDateToHtml } from '../lib/render-date-to-html';
import invariant from '../lib/tiny-invariant';

export async function getStaticPaths() {
  return (await getCollection('blog')).map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

type Props = Awaited<ReturnType<typeof getStaticPaths>>[number]['props'];

const { entry } = Astro.props;
const { Content, remarkPluginFrontmatter } = await entry.render();

invariant(
  typeof remarkPluginFrontmatter.description === 'string' ||
    typeof remarkPluginFrontmatter.description === 'undefined',
);
---

<Layout
  title={entry.data.title}
  description={remarkPluginFrontmatter.description}
  ogImage={entry.data.ogImage?.src}
  ogType="article"
  twitterCard={entry.data.twitterCard}
>
  <PageHeader title={entry.data.title}>
    <p class="text-sm text-dynamic-muted" set:html={renderDateToHtml(entry.data.pubDate)} />
  </PageHeader>

  <main class="prose wrapper">
    <Content />
  </main>
</Layout>
